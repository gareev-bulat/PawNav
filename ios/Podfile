require File.join(File.dirname(`node --print "require.resolve('expo/package.json')"`), "scripts/autolinking")
require File.join(File.dirname(`node --print "require.resolve('react-native/package.json')"`), "scripts/react_native_pods")

require 'json'
podfile_properties = JSON.parse(File.read(File.join(__dir__, 'Podfile.properties.json'))) rescue {}

ENV['RCT_NEW_ARCH_ENABLED'] = podfile_properties['newArchEnabled'] == 'true' ? '1' : '0'
ENV['EX_DEV_CLIENT_NETWORK_INSPECTOR'] = podfile_properties['EX_DEV_CLIENT_NETWORK_INSPECTOR']

# Define platform
platform :ios, podfile_properties['ios.deploymentTarget'] || '15.1'
# Build Swift pods as static frameworks to generate module maps
use_frameworks! :linkage => :static
# Also enable modular headers for Objective-C pods without modules
use_modular_headers!

install! 'cocoapods',
  :deterministic_uuids => false

prepare_react_native_project!

target 'pawnav' do
  use_expo_modules!

  # @generated begin react-native-maps - expo prebuild (DO NOT MODIFY) sync-e9cc66c360abe50bc66d89fffb3c55b034d7d369
  pod 'react-native-google-maps', path: File.dirname(`node --print "require.resolve('react-native-maps/package.json')"`)
  # @generated end react-native-maps


  config = use_native_modules!([
    'node',
    '--no-warnings',
    '--eval',
    'require(require.resolve(\'expo-modules-autolinking\', { paths: [require.resolve(\'expo/package.json\')] }))(process.argv.slice(1))',
    'react-native-config',
    '--json',
    '--platform',
    'ios'
  ])

  use_react_native!(
    :path => config[:reactNativePath],
    :hermes_enabled => podfile_properties['expo.jsEngine'] == nil || podfile_properties['expo.jsEngine'] == 'hermes',
    :app_path => "#{Pod::Config.instance.installation_root}/..",
    :privacy_file_aggregation_enabled => podfile_properties['apple.privacyManifestAggregationEnabled'] != 'false',
  )

  post_install do |installer|
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false,
      :ccache_enabled       => podfile_properties['apple.ccacheEnabled'] == 'true',
    )

    # Disable code-signing for embedded resource bundles (Xcode 14 quirk)
    installer.target_installation_results.pod_target_installation_results.each do |_pod, result|
      result.resource_bundle_targets.each do |bundle_target|
        bundle_target.build_configurations.each do |cfg|
          cfg.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
        end
      end
    end
  end
end